/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package round_button;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import javax.swing.table.DefaultTableModel;
import round_button.code.Etudiant;
import round_button.code.traitementFichier;

/**
 *
 * @author acer
 */
public class Liste extends javax.swing.JFrame {

    /**
     * Creates new form Liste
     */
    public Liste() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txt = new javax.swing.JTextField();
        btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Saisir une fili√©re : ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(250, 100, 180, 40);
        getContentPane().add(txt);
        txt.setBounds(390, 110, 170, 20);

        btn.setText("Lister");
        btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionPerformed(evt);
            }
        });
        getContentPane().add(btn);
        btn.setBounds(580, 110, 59, 23);

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CNE", "Nom", "Prenom", "Date", "sexe", "Filiere"
            }
        ));
        tab.setSelectionBackground(new java.awt.Color(255, 51, 51));
        jScrollPane1.setViewportView(tab);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(170, 170, 580, 90);

        jButton2.setText("Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(20, 400, 110, 60);

        jLabel1.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\acer\\Desktop\\liste.jpg")); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 950, 620);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         roundButton roundButton = new roundButton();
        roundButton.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
     ArrayList<Etudiant> E;
     traitementFichier tf;
    private void btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionPerformed
        String s=txt.getText();
        if(!s.equals("")){
        char[] char_table = s.toCharArray();
        char_table[0]=Character.toUpperCase(char_table[0]);
        s = new String(char_table);
        }
        DefaultTableModel dtm=(DefaultTableModel)tab.getModel();
        if(s.equals("Wisd")){
            try {
                E=new ArrayList<Etudiant>();
                tf=new traitementFichier("Wisd.txt");
                E=tf.Lecture(E);
                dtm.setNumRows(0);
                for(Etudiant e:E){
                    dtm.addRow(new Object[]{e.getCNE(),e.getName(),e.getLastname(),e.getDaten(),e.getFil(),e.getSexe()});
                }
            } catch (IOException ex) {
                Logger.getLogger(Liste.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(s.equals("BigData")){
            try {
                E=new ArrayList<Etudiant>();
                tf=new traitementFichier("BigData.txt");
                E=tf.Lecture(E);
                dtm.setNumRows(0);
                for(Etudiant e:E){
                    dtm.addRow(new Object[]{e.getCNE(),e.getName(),e.getLastname(),e.getDaten(),e.getFil(),e.getSexe()});
                }
            } catch (IOException ex) {
                Logger.getLogger(Liste.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(s.equals("Msid")){
            try {
                E=new ArrayList<Etudiant>();
                tf=new traitementFichier("Msid.txt");
                E=tf.Lecture(E);
                dtm.setNumRows(0);
                for(Etudiant e:E){
                    dtm.addRow(new Object[]{e.getCNE(),e.getName(),e.getLastname(),e.getDaten(),e.getFil(),e.getSexe()});
                }
            } catch (IOException ex) {
                Logger.getLogger(Liste.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        else if(s.equals("Mql")){
            try {
                E=new ArrayList<Etudiant>();
                tf=new traitementFichier("Mql.txt");
                E=tf.Lecture(E);
                dtm.setNumRows(0);
                for(Etudiant e:E){
                    dtm.addRow(new Object[]{e.getCNE(),e.getName(),e.getLastname(),e.getDaten(),e.getFil(),e.getSexe()});
                }
            } catch (IOException ex) {
                Logger.getLogger(Liste.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(s.equals("Midvi")){
            try {
                E=new ArrayList<Etudiant>();
                tf=new traitementFichier("Midvi.txt");
                E=tf.Lecture(E);
                dtm.setNumRows(0);
                for(Etudiant e:E){
                    dtm.addRow(new Object[]{e.getCNE(),e.getName(),e.getLastname(),e.getDaten(),e.getFil(),e.getSexe()});
                }
            } catch (IOException ex) {
                Logger.getLogger(Liste.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(s.equals("")){
            JOptionPane.showMessageDialog(btn, "la Chaine ne doit pas etre vide", "Warning",WARNING_MESSAGE);
        }
        
        else{
            JOptionPane.showMessageDialog(btn, "la Filier n'existe pas", "Warning",WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Liste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Liste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Liste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Liste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Liste().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tab;
    private javax.swing.JTextField txt;
    // End of variables declaration//GEN-END:variables
}
